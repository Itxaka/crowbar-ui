.database-configuration-page
    h2(translate='') upgrade.steps.database-configuration.title
    // TODO(itxaka): temporal crappy solution to show the errors for testing
    ul.list-group
        li.list-group-item(ng-repeat='error in upgradeDatabaseVm.errors') {{ error }}

    uib-tabset
        uib-tab(index='0', disable='upgradeDatabaseVm.running || upgradeDatabaseVm.completed',
        heading="{{'upgrade.steps.database-configuration.navigation-tabs.create-database' | translate}}")
            form.database-form.new(name="newForm")
                .row
                    .col-md-8
                        .form-group(ng-class="{'has-error': newForm.username.$invalid && newForm.username.$dirty}")
                            label.control-label(for='username', translate='') upgrade.steps.database-configuration.database-form.username
                            input.form-control(type='text', name='username',
                            minlength='4', maxlength='63',
                            ng-pattern='upgradeDatabaseVm.patterns.username',
                            required='', ng-model='upgradeDatabaseVm.databaseForm.username')
                    .col-md-8
                        .form-group(ng-class="{'has-error': newForm.password.$invalid && newForm.password.$dirty}")
                            label.control-label(for='password', translate='') upgrade.steps.database-configuration.database-form.password
                            input.form-control(type='password', name='password',
                            minlength='4', maxlength='63',
                            ng-pattern='upgradeDatabaseVm.patterns.password',
                            required='', ng-model='upgradeDatabaseVm.databaseForm.password')
                    .col-md-4
                        button.btn.btn-success.pull-left.btn-lg(
                            ng-click="upgradeDatabaseVm.createServer()",
                            ng-disabled="newForm.$invalid || upgradeDatabaseVm.running || upgradeDatabaseVm.completed",
                            ng-class="{\
                                'spinner-visible': upgradeDatabaseVm.spinnerVisible,\
                                active: upgradeDatabaseVm.running}"
                        )
                            suse-lazy-spinner(delay="2000", active="upgradeDatabaseVm.running",
                                visible="upgradeDatabaseVm.spinnerVisible"
                            )
                            span(translate='') upgrade.steps.database-configuration.database-form.create-database

        uib-tab(index='1', disable='upgradeDatabaseVm.running || upgradeDatabaseVm.completed',
        heading="{{'upgrade.steps.database-configuration.navigation-tabs.connect-database' | translate}}")
            form.database-form.existing(name="existingForm")
                .row
                    .col-md-8
                        .form-group(ng-class="{'has-error': existingForm.host.$invalid && existingForm.host.$dirty}")
                            .host
                                label.control-label(for='host', translate='') upgrade.steps.database-configuration.database-form.server
                                input.form-control(type='text', name='host',
                                minlength='1', maxlength='253',
                                ng-pattern='upgradeDatabaseVm.patterns.host',
                                required='', ng-model='upgradeDatabaseVm.databaseForm.host')
                    .col-md-4
                        .form-group(ng-class="{'has-error': existingForm.port.$invalid && existingForm.port.$dirty}")
                            .port
                                label.control-label(for='port', translate='') upgrade.steps.database-configuration.database-form.port
                                input.form-control(type='number', name='port',
                                min='1', max='65535',
                                required='', ng-model='upgradeDatabaseVm.databaseForm.port')
                    .col-md-8
                        .form-group(ng-class="{'has-error': existingForm.username.$invalid && existingForm.username.$dirty}")
                            label.control-label(for='username', translate='') upgrade.steps.database-configuration.database-form.username
                            input.form-control(type='text', name='username',
                            minlength='4', maxlength='63',
                            ng-pattern='upgradeDatabaseVm.patterns.username',
                            required='', ng-model='upgradeDatabaseVm.databaseForm.username')
                    .col-md-8
                        .form-group(ng-class="{'has-error': existingForm.password.$invalid && existingForm.password.$dirty}")
                            label.control-label(for='password', translate='') upgrade.steps.database-configuration.database-form.password
                            input.form-control(type='password', name='password',
                            minlength='4', maxlength='63',
                            ng-pattern='upgradeDatabaseVm.patterns.password',
                            required='', ng-model='upgradeDatabaseVm.databaseForm.password')
                    .col-md-4
                        button.btn.btn-success.pull-left.btn-lg(
                            ng-click="upgradeDatabaseVm.connectServer()",
                            ng-disabled="existingForm.$invalid || upgradeDatabaseVm.running || upgradeDatabaseVm.completed",
                            ng-class="{\
                                'spinner-visible': upgradeDatabaseVm.spinnerVisible,\
                                active: upgradeDatabaseVm.running}"
                        )
                            suse-lazy-spinner(delay="2000", active="upgradeDatabaseVm.running",
                                visible="upgradeDatabaseVm.spinnerVisible"
                            )
                            span(translate='') upgrade.steps.database-configuration.database-form.connect-database
